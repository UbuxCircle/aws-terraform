name: Provisionierung S3 Storage Bucket


# Controls when the workflow will run
on:
   workflow_dispatch:
    inputs:
      s3-name:
        description: s3 storage name
        required: true
        default: ''
        type: string
      s3-visibility:
        type: choice
        description: s3 visibility
        required: true
        options:
        - public
        - private
      s3-size:
        description: s3 size
        required: true
        default: ''
        type: string
      message:
        description: ticket / changenumber
        required: true
      environment:
        type: choice
        description: environment
        options:
        - production
        - test
        - development
       
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
 Init:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3
      # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!
      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
 Setup_Infrastructure:
    runs-on: ubuntu-latest
    steps:
    - name: Send greeting
      run: echo "${{ github.event.inputs.message }} ${{ fromJSON('["", "ðŸ¥³"]')[github.event.inputs.use-emoji == 'true'] }} ${{ github.event.inputs.name }}"
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
        with:
          node-version: '14'
     - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: '${{ secrets.TF_USER_AWS_KEY }}'
          aws-secret-access-key: '${{ secrets.TF_USER_AWS_SECRET }}'
          aws-region: eu-central-1
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_wrapper: false
    
